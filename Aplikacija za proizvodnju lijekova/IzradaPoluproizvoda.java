/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package isproizvodnjelijekova;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shpekula
 */
public class IzradaPoluproizvoda extends javax.swing.JFrame {
SQLPoluproizvod sqlpp = new SQLPoluproizvod();
SQLSUP sqlsup = new SQLSUP();
SQLSirovine sqlsirovine = new SQLSirovine();
SQLIzrada sqlizrada = new SQLIzrada();
    /**
     * Creates new form KreiranjePoluproizvoda
     */
    public IzradaPoluproizvoda() {
        initComponents();
        autoIzrada();
        popuniPoluproizvod();
        datumIzrade();
        btnKreirajPoluproizvod.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jDialog = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        btnUredu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSifraPP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNazivPP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtKolicinaPP = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablica = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnKreirajPoluproizvod = new javax.swing.JButton();
        cmbPP = new javax.swing.JComboBox<>();
        btnIzracunajKolicinu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtZK = new javax.swing.JTextField();
        btnPovratak = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtSifraIzrade = new javax.swing.JTextField();
        Datum = new com.toedter.calendar.JDateChooser();
        txtRokValjanosti = new javax.swing.JTextField();
        txtDatumIzrade = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Nedovoljan broj sirovina na zalihama");

        btnUredu.setText("U redu");
        btnUredu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUreduActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogLayout = new javax.swing.GroupLayout(jDialog.getContentPane());
        jDialog.getContentPane().setLayout(jDialogLayout);
        jDialogLayout.setHorizontalGroup(
            jDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLayout.createSequentialGroup()
                .addGroup(jDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(jDialogLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(btnUredu)))
                .addContainerGap(314, Short.MAX_VALUE))
        );
        jDialogLayout.setVerticalGroup(
            jDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addGap(30, 30, 30)
                .addComponent(btnUredu)
                .addContainerGap(219, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Šifra poluproizvoda:");

        txtSifraPP.setEditable(false);

        jLabel2.setText("Naziv poluproizvoda:");

        txtNazivPP.setEditable(false);

        jLabel4.setText("Količina poluproizvoda:");

        txtKolicinaPP.setEditable(false);

        tablica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Šifra poluproizvoda", "Potrebna količina", "Šifra sirovine"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablica);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Izrada poluproizvoda");

        btnKreirajPoluproizvod.setText("Kreiraj poluproizvod");
        btnKreirajPoluproizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajPoluproizvodActionPerformed(evt);
            }
        });

        cmbPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPPActionPerformed(evt);
            }
        });

        btnIzracunajKolicinu.setText("Izračunaj količinu");
        btnIzracunajKolicinu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzracunajKolicinuActionPerformed(evt);
            }
        });

        jLabel3.setText("Unesite željenu količinu:");

        btnPovratak.setText("Povratak na izbornik");
        btnPovratak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPovratakActionPerformed(evt);
            }
        });

        jLabel5.setText("Šifra izrade:");

        txtDatumIzrade.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnKreirajPoluproizvod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnIzracunajKolicinu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSifraIzrade)
                            .addComponent(cmbPP, 0, 100, Short.MAX_VALUE)
                            .addComponent(txtSifraPP)
                            .addComponent(txtNazivPP)
                            .addComponent(txtKolicinaPP, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtZK)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRokValjanosti, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Datum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatumIzrade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPovratak, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDatumIzrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSifraIzrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(cmbPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSifraPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNazivPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtKolicinaPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtZK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Datum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnIzracunajKolicinu))
                            .addComponent(txtRokValjanosti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKreirajPoluproizvod)
                    .addComponent(btnPovratak))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajPoluproizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajPoluproizvodActionPerformed
        // TODO add your handling code here:
        int sifraPP = Integer.parseInt(txtSifraPP.getText());
        String nazivPP = txtNazivPP.getText();
        int kolicinaPP = Integer.parseInt(txtKolicinaPP.getText());
        int zk = Integer.parseInt(txtZK.getText());
        
        int kolicina = Integer.parseInt(txtZK.getText());
        
        ArrayList<Poluproizvod> listaPP = sqlpp.listaPoluproizvoda();
        for(Poluproizvod pp: listaPP)
        {
            int sifraPoluP = pp.getSifraPP();
            int kolicinaPoluP = pp.getKolicinaPP();
            zk += kolicinaPoluP;
     
            pp.setSifraPP(sifraPP);
            pp.setNazivPP(nazivPP);
            pp.setKolicinaPP(zk);
        
            sqlpp.IzmjenaSVE(pp);
        }
        int b = tablica.getRowCount();
        int c = tablica.getColumnCount();
        int broj = 0;
        int a = 0;
        int d = 1;
        
        ArrayList<Sirovine> listaSirovina = sqlsirovine.listaSirovina();
        
         for(int i = 0; i < b; i++)
                {
                    int sifraSirovine = 0;
                    int pks = 0;
                    a = 0;
                    
                    int sifraSir = 0;
                    int kolicinaSir = 0;
                    broj = 0;
                    
                for(int j = 0; j < c; j++)
                {
                    for(Sirovine sirovine: listaSirovina)
                    {
                        sifraPP = (int) (tablica.getValueAt(i, 0));
                        pks = (int) (tablica.getValueAt(i, 1));
                        sifraSirovine = (int) (tablica.getValueAt(i, 2));
                        //if(a<d)
                        //{
                            sifraSir = sirovine.getSifraSirovine();
                            kolicinaSir = sirovine.getKolicinaSirovine();
                            if(sifraSirovine == sifraSir)
                            {
                                broj = pks * kolicina;
                                kolicinaSir -= broj;
                    
                                sirovine.setSifraSirovine(sifraSirovine);
                                sirovine.setKolicinaSirovine(kolicinaSir);
                                sqlsirovine.Izmjena(sirovine);    
                            }
                            
                            //a++;
                        //}
                    }
                }
                }         
         
         int sifraIzrade = Integer.parseInt(txtSifraIzrade.getText());
         String datumIzrade = txtDatumIzrade.getText();
         String rokValjanosti = txtRokValjanosti.getText();
         
         Izrada izrada = new Izrada();
         izrada.setSifraIzrade(sifraIzrade);
         izrada.setSifraPP(sifraPP);
         izrada.setKolicinaIzradenih(kolicina);
         izrada.setDatumIzrade(datumIzrade);
         izrada.setRokValjanosti(rokValjanosti);
         sqlizrada.spremi(izrada);
        
        btnKreirajPoluproizvod.setVisible(false);
    }//GEN-LAST:event_btnKreirajPoluproizvodActionPerformed

    private void cmbPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPPActionPerformed
        // TODO add your handling code here:
        
        btnKreirajPoluproizvod.setVisible(false);
        
        Poluproizvod selPoluproizvod = (Poluproizvod)cmbPP.getSelectedItem();
        
        txtSifraPP.setText(Integer.toString(selPoluproizvod.getSifraPP()));
        txtNazivPP.setText(selPoluproizvod.getNazivPP());
        txtKolicinaPP.setText(Integer.toString(selPoluproizvod.getKolicinaPP()));
        
        int a = 1;
        int d = 2;
        
        int sifraPP = selPoluproizvod.getSifraPP();
        
        
        DefaultTableModel model = (DefaultTableModel)tablica.getModel();
        
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        ArrayList<SUP> listaSUP = sqlsup.listaSUP();
        for(SUP sup: listaSUP)
        {
            int sifraPoluproizvoda = sup.getSifraPP();
            int sifraSirovine = sup.getSifraSirovine();
            int pks = sup.getKolicinaSUP();
            
            
            if(sifraPP == sifraPoluproizvoda)
            {
                //d++;
                //if(a<d)
                model.addRow(new Object[]{sifraPP, pks, sifraSirovine}); 
            }
            //a++;
        }
        
    }//GEN-LAST:event_cmbPPActionPerformed

    private void btnIzracunajKolicinuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzracunajKolicinuActionPerformed
        // TODO add your handling code here:
        int b = tablica.getRowCount();
        int c = tablica.getColumnCount();
        
        int zeljenaKolicina = Integer.parseInt(txtZK.getText());
        int mogucaKolicina;
        
        int a = 0;
        int d = 1;
        
        //int broj = 0;
        //int noviBroj = 0;
        ArrayList<Sirovine> listaSirovina = sqlsirovine.listaSirovina();
        
        for(int i = 0; i < b; i++)
                {
                    //int sifraSUP = 0;
                    int sifraSirovine = 0;
                    int pks = 0;
                    int sifraPP = 0;
                
                    
                    int sifraS = 0;
                    //String nazivS = "";
                    int kolicinaS = 0;
                    mogucaKolicina = 0;
                    a = 0;
                    
                for(int j = 0; j < c; j++)
                {
                    for(Sirovine sirovine: listaSirovina)
                    {
                        sifraS = sirovine.getSifraSirovine();
                        kolicinaS = sirovine.getKolicinaSirovine();
                    
                        sifraPP = (int) (tablica.getValueAt(i, 0));
                        pks = (int) (tablica.getValueAt(i, 1));
                        sifraSirovine = (int) (tablica.getValueAt(i, 2));
                        
                        if(a<d)
                        {
                            mogucaKolicina = zeljenaKolicina * pks;
                            if(kolicinaS >= mogucaKolicina)
                            {
                                btnKreirajPoluproizvod.setVisible(true);
                            }
                            else if(kolicinaS < mogucaKolicina)
                            {
                                jDialog.setVisible(true);
                                jDialog.setSize(300, 200);
                                System.out.print("NEDOVOLJAN BROJ SIROVINA!");
                                txtZK.setText("");
                            }
                            a++;
                        }   
                    }
                }
                }
        String rok = ((JTextField)Datum.getDateEditor().getUiComponent()).getText();
        txtRokValjanosti.setText(rok);
        
    }//GEN-LAST:event_btnIzracunajKolicinuActionPerformed

    private void btnPovratakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPovratakActionPerformed
        // TODO add your handling code here:
        GlavniIzbornik gi = new GlavniIzbornik();
        gi.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnPovratakActionPerformed

    private void btnUreduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUreduActionPerformed
        // TODO add your handling code here:
        jDialog.setVisible(false);
    }//GEN-LAST:event_btnUreduActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IzradaPoluproizvoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IzradaPoluproizvoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IzradaPoluproizvoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IzradaPoluproizvoda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IzradaPoluproizvoda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Datum;
    private javax.swing.JButton btnIzracunajKolicinu;
    private javax.swing.JButton btnKreirajPoluproizvod;
    private javax.swing.JButton btnPovratak;
    private javax.swing.JButton btnUredu;
    private javax.swing.JComboBox<Poluproizvod> cmbPP;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablica;
    private javax.swing.JTextField txtDatumIzrade;
    private javax.swing.JTextField txtKolicinaPP;
    private javax.swing.JTextField txtNazivPP;
    private javax.swing.JTextField txtRokValjanosti;
    private javax.swing.JTextField txtSifraIzrade;
    private javax.swing.JTextField txtSifraPP;
    private javax.swing.JTextField txtZK;
    // End of variables declaration//GEN-END:variables
private void popuniPoluproizvod(){
    ArrayList<Poluproizvod>listaPoluproizvoda = sqlpp.listaPoluproizvoda();
    for(Poluproizvod poluproizvod: listaPoluproizvoda){
        cmbPP.addItem(poluproizvod);
    }
}
private void autoIzrada()
{
    ArrayList<Izrada> listaIzrade = sqlizrada.listaIzrade();
    int sifra = 0;
    for(Izrada izrada: listaIzrade)
    {
        sifra = izrada.getSifraIzrade();
        if(sifra == 0)
        {
            sifra = 1;
            txtSifraIzrade.setText(Integer.toString(sifra));
        }
        else
        {
            sifra += 1;
            txtSifraIzrade.setText(Integer.toString(sifra));
        }
    }
}
private void datumIzrade()
{
    String txtDat;
    txtDat = new SimpleDateFormat("dd.MM.yyyy.", Locale.ENGLISH).format(new Date());
    txtDatumIzrade.setText(txtDat);    
}
}